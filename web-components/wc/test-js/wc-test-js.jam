with( $wc )
$Component( 'wc:test-js', function( root ){
    root= $Node( root )
    
    var exec= $Thread( function( source ){
        var proc= new Function( '_done', $String( source ).$ )
        proc( _done )
        return true
    })

    var source= $String( root.text() )
    source.tab2space().minimizeIndent().trim( /[\n\r]/ )
    
    var nodeSource0= $Node( 'wc:test-js_source' )
    var nodeSource= $Node( 'div' )
    nodeSource.text( source )
    nodeSource0.tail( nodeSource )
    root.clear().tail( nodeSource0 )
    
    nodeSource
    .editable( true )
    
    root.listen
    (   '$jam.$commit'
    ,   function( ev ){
            run()
        }
    )
    
    var _done=
    $Poly
    (   function( ){
            if( passed() === 'wait' ) passed( true )
        }
    ,   function( val ){
            if( passed() === 'wait' ) passed( Boolean( val ) )
            printValue( val )
        }
    ,   function( a, b ){
            if( passed() === 'wait' ) passed( a === b )
            printValue( a )
            if( a !== b ) printValue( b )
        }
    )

    var passed=
    $Poly
    (   function( ){
            return root.state( 'passed' )
        }
    ,   function( val ){
            root.state( 'passed', val )
        }
    )
    
    var timeout=
    function( ){
        return Number( root.state( 'timeout' ) )
    }

    var print=
    function( val ){
        var node= $Node( 'wc:test-js_result' )
        node.text( val )
        root.tail( node )
    }
    
    var printValue=
    function( val ){
        if( typeof val === 'function' ){
            if( !val.hasOwnProperty( 'toString' ) ){
                print( 'Function: [object Function]' )
                return
            }
        }
        print( $classOf( val ) + ': ' + val )
    }
    
    var run=
    function( ){
        var source= nodeSource.text()
        var results= root.childList( 'wc:test-js_result' )
        for( var i= 0; i < results.length; ++i ){
            $Node( results[i] ).parent( null )
        }
        passed( 'wait' )
        if( !exec( source ) ) passed( false )
        if( timeout() ){
            $schedule( timeout(), function( ){
                if( passed() !== 'wait' ) return
                passed( false )
                print( 'Timeout! (' + timeout() + ')' )
            })
        } else {
            if( passed() === 'wait' ) passed( false )
        }
    }
    
    run()
    
})
